!function webpackUniversalModuleDefinition(e,s){if("object"==typeof exports&&"object"==typeof module)module.exports=s();else if("function"==typeof define&&define.amd)define([],s);else{var t=s();for(var r in t)("object"==typeof exports?exports:e)[r]=t[r]}}(window,(function(){return function(e){var s={};function __webpack_require__(t){if(s[t])return s[t].exports;var r=s[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,__webpack_require__),r.l=!0,r.exports}return __webpack_require__.m=e,__webpack_require__.c=s,__webpack_require__.d=function(e,s,t){__webpack_require__.o(e,s)||Object.defineProperty(e,s,{enumerable:!0,get:t})},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.t=function(e,s){if(1&s&&(e=__webpack_require__(e)),8&s)return e;if(4&s&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(__webpack_require__.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&s&&"string"!=typeof e)for(var r in e)__webpack_require__.d(t,r,function(s){return e[s]}.bind(null,r));return t},__webpack_require__.n=function(e){var s=e&&e.__esModule?function getDefault(){return e.default}:function getModuleExports(){return e};return __webpack_require__.d(s,"a",s),s},__webpack_require__.o=function(e,s){return Object.prototype.hasOwnProperty.call(e,s)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=0)}([function(e,s,t){"use strict";t.r(s),t.d(s,"MessagingService",(function(){return messaging_service_MessagingService})),t.d(s,"WindowIframeDestination",(function(){return window_iframe_destination_WindowIframeDestination})),t.d(s,"RequestMessage",(function(){return request_message_RequestMessage})),t.d(s,"ResponseMessage",(function(){return response_message_ResponseMessage})),t.d(s,"CedictDestinationConfig",(function(){return c})),t.d(s,"CedictDestinationDevConfig",(function(){return u}));var r="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto),n=new Uint8Array(16);function rng(){if(!r)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return r(n)}for(var i=[],o=0;o<256;++o)i[o]=(o+256).toString(16).substr(1);var a=function bytesToUuid(e,s){var t=s||0,r=i;return[r[e[t++]],r[e[t++]],r[e[t++]],r[e[t++]],"-",r[e[t++]],r[e[t++]],"-",r[e[t++]],r[e[t++]],"-",r[e[t++]],r[e[t++]],"-",r[e[t++]],r[e[t++]],r[e[t++]],r[e[t++]],r[e[t++]],r[e[t++]]].join("")};var d=function v4(e,s,t){var r=s&&t||0;"string"==typeof e&&(s="binary"===e?new Array(16):null,e=null);var n=(e=e||{}).random||(e.rng||rng)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,s)for(var i=0;i<16;++i)s[r+i]=n[i];return s||a(n)};class message_Message{constructor(e={}){this.role=void 0,this.type=message_Message.types.GENERIC,this.ID=d(),this.body=e}static isKnownType(e){return Object.values(message_Message.types).includes(e)}}message_Message.roles={REQUEST:"Request",RESPONSE:"Response"},message_Message.types={GENERIC:"ALPHEIOS_MESSAGE"};class request_message_RequestMessage extends message_Message{constructor(e={}){super(e),this.role=message_Message.roles.REQUEST,this.header={}}}class response_message_ResponseMessage extends message_Message{constructor(e,s={},t=response_message_ResponseMessage.responseCodes.UNDEFINED,{errorCode:r}={}){if(super(s),!e)throw new Error("Request is not provided");if(!e.ID)throw new Error("Request has no ID");if(this.role=message_Message.roles.RESPONSE,this.requestHeader=e.header||{},this.requestID=e.ID,this.responseCode=t,this.errorCode=0,t===response_message_ResponseMessage.responseCodes.ERROR){if(!r)throw new Error("An error code must be provided for failed requests");this.errorCode=r}}static Success(e,s={}){return new this(e,s,response_message_ResponseMessage.responseCodes.SUCCESS)}static Error(e,s,t){return new this(e,s,response_message_ResponseMessage.responseCodes.ERROR,{errorCode:t})}static isResponse(e){return e.role&&e.role===message_Message.roles.RESPONSE&&e.requestHeader&&e.requestID}}response_message_ResponseMessage.responseCodes={SUCCESS:"Success",UNDEFINED:"Undefined",ERROR:"Error"},response_message_ResponseMessage.errorCodes={SERVICE_UNINITIALIZED:1,INITIALIZATION_ERROR:2,UNKNOWN_REQUEST:3,INTERNAL_ERROR:4};class StoredRequest{constructor(){this.resolve=null,this.reject=null,this.promise=new Promise(this.executor.bind(this))}executor(e,s){this.resolve=e,this.reject=s}}let _=new Map;class messaging_service_MessagingService{constructor(e,s=[]){if(!e)throw new Error(messaging_service_MessagingService.errMsgs.NO_NAME);this.name=e,this._messages=new Map,this._destinations=new Map,Array.isArray(s)||(s=[s]),s.forEach(e=>this.registerDestination(e))}static hasService(e){return _.has(e)}static getService(e){return _.get(e)}static createService(e,s=[]){const t=new messaging_service_MessagingService(e,s);return _.set(e,t),t}static deleteService(e){return _.delete(e)}registerDestination(e){if(this._destinations.has(e.name))throw new Error("Destination already exists");this._destinations.set(e.name,e),e.ableToSend&&e.registerResponseCallback(this.dispatchMessage.bind(this))}updateDestination(e){if(!this._destinations.has(e.name))throw new Error("Cannot update a destination that does not exist");this._destinations.get(e.name).deregister(),this._destinations.set(e.name,e),e.ableToSend&&e.registerResponseCallback(this.dispatchMessage.bind(this))}dispatchMessage(e){if(!message_Message.isKnownType(e.type))return;if(!response_message_ResponseMessage.isResponse(e))return void console.error("A message not following a response format will be ignored:",e);if(!this._messages.has(e.requestID))return;const s=this._messages.get(e.requestID);window.clearTimeout(s.timeoutID),e.responseCode===response_message_ResponseMessage.responseCodes.ERROR?s.reject(e):s.resolve(e),this._messages.delete(e.requestID)}registerRequest(e,s=1e4){if(this._messages.has(e.ID))throw new Error(`Request with ${e.ID} ID is already registered`);let t=new StoredRequest(e);return this._messages.set(e.ID,t),t.timeoutID=window.setTimeout(s=>{t.reject(new Error("Timeout has been expired for a message with request ID "+e.ID)),this._messages.delete(s)},s),t.promise}sendRequestTo(e,s,t=1e4){if(!e)throw new Error("Destination name is not provided");if(!this._destinations.has(e))throw new Error("Unknown destination "+e);try{this._destinations.get(e).sendRequest(s)}catch(s){throw new Error(`Request to ${e} failed: ${s.message}`)}return this.registerRequest(s,t)}}messaging_service_MessagingService.errMsgs={NO_NAME:"MessagingService must be created with a name"};class Destination{constructor({name:e,commModes:s=[Destination.commModes.SEND]}={}){if(!e)throw new Error(Destination.errMsgs.NO_DESTINATION);this.name=e,this.commModes=s,this._responseCallback=null}get ableToSend(){return this.commModes.includes(Destination.commModes.SEND)}get ableToReceive(){return this.commModes.includes(Destination.commModes.RECEIVE)}deregister(){throw new Error(Destination.errMsgs.DEREGISTER_NOT_DEFINED)}}Destination.commModes={SEND:"Send",RECEIVE:"Receive"},Destination.errMsgs={NO_DESTINATION:"Destination name is missing",DEREGISTER_NOT_DEFINED:"Deregister method must be defined in a subclass"};class window_iframe_destination_WindowIframeDestination extends Destination{constructor({name:e,commModes:s,targetURL:t,targetIframeID:r,receiverCB:n}={}){if(super({name:e,commModes:s}),this._targetURL=null,this._targetIframeID=null,this._registeredRequestHandler=null,this._registeredResponseHandler=null,this.ableToSend){if(!t)throw new Error(window_iframe_destination_WindowIframeDestination.errMsgs.NO_TARGET_URL);if(!r)throw new Error(window_iframe_destination_WindowIframeDestination.errMsgs.NO_TARGET_IFRAME_ID);this._targetURL=t,this._targetIframeID=r}if(this.ableToReceive){if(!n)throw new Error(window_iframe_destination_WindowIframeDestination.errMsgs.NO_RECEIVER_CB);this._registeredRequestHandler=this._requestHandler.bind(this,n),window.addEventListener("message",this._registeredRequestHandler,!1)}}registerResponseCallback(e){this._registeredResponseHandler=this._responseHandler.bind(this),window.addEventListener("message",this._registeredResponseHandler,!1),this._responseCallback=e}sendRequest(e){const s=document.querySelector("#"+this._targetIframeID);if(!s)throw new Error(`An #${this._targetIframeID} iframe does not exist in the document`);const t=s.contentWindow;let r=!1;try{r="about:blank"===t.location.href}catch(e){if(!(e instanceof DOMException))throw e}if(r)throw new Error(`Target document ${this._targetURL} is not loaded yet`);try{t.postMessage(e,this._targetURL)}catch(s){if(!(s instanceof DOMException&&"DataCloneError"===s.name))throw s;console.warn("Request that does not confirm to the structured clone algorithm cannot be sent, will try to convert it to a plain object and send again"),e.body=window_iframe_destination_WindowIframeDestination._toPostable(e.body),t.postMessage(e,this._targetURL)}}sendResponse(e){try{window.parent.postMessage(e,e.requestHeader.origin)}catch(s){if(!(s instanceof DOMException&&"DataCloneError"===s.name))throw s;console.warn("Response that does not confirm to the structured clone algorithm cannot be sent, will try to convert it to a plain object and send again"),e.body=window_iframe_destination_WindowIframeDestination._toPostable(e.body),window.parent.postMessage(e,e.requestHeader.origin)}}_requestHandler(e,s){if(!window_iframe_destination_WindowIframeDestination._isSupportedEvent(s))return;let t=s.data;t.header.origin=s.origin,e(t,this.sendResponse.bind(this))}_responseHandler(e){if(!window_iframe_destination_WindowIframeDestination._isSupportedEvent(e))return;const s=e.data;this._responseCallback&&this._responseCallback(s)}static _isSupportedEvent(e){return Boolean(e&&e.data&&e.data.type&&message_Message.isKnownType(e.data.type))}deregister(){this._registeredResponseHandler&&(window.removeEventListener("message",this._registeredResponseHandler,!1),this._registeredResponseHandler=null),this._registeredRequestHandler||(window.removeEventListener("message",this._registeredRequestHandler,!1),this._registeredRequestHandler=null)}static _toPostable(e){let s;return s=e instanceof Error?{name:e.name,message:e.message}:JSON.parse(JSON.stringify(e)),s}}window_iframe_destination_WindowIframeDestination.errMsgs={NO_TARGET_URL:"Target URL is not provided",NO_TARGET_IFRAME_ID:"Target iframe ID is not provided",NO_RECEIVER_CB:"A receiver callback must be provided for a destination in the RECEIVE communication mode"};const c={name:"cedict",targetURL:"https://lexis-dev.alpheios.net",targetIframeID:"alpheios-lexis-cs"},u={name:"cedict",targetURL:"https://lexis-dev.alpheios.net/index-dev.html",targetIframeID:"alpheios-lexis-cs"}}])}));